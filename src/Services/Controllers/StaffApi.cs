/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using ParcelLogistics.SKS.Package.Services.Attributes;

using Microsoft.AspNetCore.Authorization;
using ParcelLogistics.SKS.Package.Services.DTOs;
using ParcelLogistics.SKS.Package.BusinessLogic.Interfaces;
using ParcelLogistics.SKS.Package.BusinessLogic.Entities.Exceptions;
using AutoMapper;
using Microsoft.AspNetCore.Cors;

namespace ParcelLogistics.SKS.Package.Services.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class StaffApiController : ControllerBase
    {
        private readonly ITrackingLogic _trackingLogic;
        private readonly IMapper _mapper;

        /// <summary>
        /// 
        /// </summary>
        public StaffApiController(ITrackingLogic trackingLogic, IMapper mapper)
        {
            _trackingLogic = trackingLogic;
            _mapper = mapper;
        }

        /// <summary>
        /// Report that a Parcel has been delivered at it's final destination address. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Successfully reported hop.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID. </response>
        [EnableCors("CorsPolicy")]
        [HttpPost]
        [Route("/api/parcel/{trackingId}/reportDelivery/")]
        [ValidateModelState]
        [SwaggerOperation("ReportParcelDelivery")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult ReportParcelDelivery([FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")]string trackingId)
        {
            if (trackingId == null)
            {
                Error error = new Error();
                error.ErrorMessage = "No parcel with this Tracking ID found";

                return new NotFoundObjectResult(error);
            }
            if(trackingId == "")
            {
                Error error = new Error();
                error.ErrorMessage = "No parcel with this empty Tracking ID found";

                return new NotFoundObjectResult(error);
            }

            _trackingLogic.ReportParcelDelivery(trackingId);
            return Ok("Successed.");
        }

        /// <summary>
        /// Report that a Parcel has arrived at a certain hop either Warehouse or Truck. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <param name="code">The Code of the hop (Warehouse or Truck).</param>
        /// <response code="200">Successfully reported hop.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID or hop with code not found. </response>
        [EnableCors("CorsPolicy")]
        [HttpPost]
        [Route("/api/parcel/{trackingId}/reportHop/{code}")]
        [ValidateModelState]
        [SwaggerOperation("ReportParcelHop")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "The operation failed due to an error.")]
        public virtual IActionResult ReportParcelHop([FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")]string trackingId, [FromRoute][Required][RegularExpression("^[A-Z]{4}\\d{1,4}$")]string code)
        {
            try
            {
                if (string.IsNullOrWhiteSpace(trackingId))
                    throw new BlException("Parcel is null.");

                if (string.IsNullOrWhiteSpace(trackingId))
                    throw new BlException("Tracking Id is empty.");

                _trackingLogic.transitionParcel(trackingId, code);
                return Ok("Successed.");
            }
            catch
            {
                throw new BlException("The operation failed due to an error.");
            }
        }
    }
}
